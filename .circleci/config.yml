version: 2.1
orbs:
  datacamp-ecr: datacamp/ecr@01
  datacamp-deploy: datacamp/deploy@2
  queue: eddiewebb/queue@1.6.4
  datacamp-deploy-branch: datacamp/deploy-branch@1
  datacamp-artifactory: datacamp/artifactory@1
workflows:
# BEGIN ANSIBLE MANAGED BLOCK
  build-and-deploy-eks:
    jobs:
      - queue/block_workflow:
          name: queue
          context: org-global
          time: '10'
          filters:
            branches:
              ignore:
                - /backstage\/.*/

      - datacamp-artifactory/build_and_push_image_to_artifactory: &dockerBuild
          name: docker-build
          context: org-global
          git_tag_filter: '--match "[0-9]*.[0-9]*.[0-9]*"'
          extra-docker-args: '--build-arg NPM_TOKEN=$NPM_TOKEN'
          dockerfile: Dockerfile
          docker-version: 20.10.2
          executor: datacamp-artifactory/buildkit
          master_tagging: manual
          requires:
            - queue

#       - datacamp-artifactory/tag_image:
#           name: tag_image
#           context: org-global
#           docker-version: 20.10.2
#           executor: datacamp-artifactory/buildkit
#           filters:
#             tags:
#               only: /^v\d+\.\d+\.\d+$/
#             branches:
#               ignore: /.*/
              
      - datacamp-artifactory/tag_repository:
          name: tag
          context: org-global
          git_tag_filter: '--match "[0-9]*.[0-9]*.[0-9]*"'
          requires:
            - docker-build
            - queue
          filters:
            branches:
              only:
                - master
  deploy-backstage:
    jobs:
      - datacamp-artifactory/build_and_push_image_to_artifactory:
          name: docker-build
          context: org-global
          extra-docker-args: "--build-arg NPM_TOKEN=$NPM_TOKEN"
          dockerfile: Dockerfile
          docker-version: 20.10.2
          executor: datacamp-artifactory/buildkit
          filters:
            branches:
              only:
                - /backstage\/.*/
      - datacamp-deploy-branch/deploy: # Backstage branch deploy
          name: deploy-to-backstage
          context: org-global
          app: ast-viewer
          env: staging
          roles: terraform-role,k8s-role
          region: us-east-1
          extra-vars: "backstage=true"
          filters:
            branches:
              only:
                - /backstage\/.*/
          requires:
            - docker-build

      - testing-complete: # <<< Require a manual approval to cleandown
          type: approval
          requires:
            - deploy-to-backstage
          filters:
            branches:
              only:
                - /backstage\/.*/

      - datacamp-deploy-branch/deploy:
          name: cleandown-backstage
          context: org-global
          app: ast-viewer
          env: staging
          roles: app-cleandown-role
          extra-vars: 'backstage=true'
          filters:
            branches:
              only:
                - /backstage\/.*/
          requires:
            - testing-complete
# END ANSIBLE MANAGED BLOCK
  version: 2.1 
  build_and_deploy:
    jobs:
      - datacamp-ecr/build_and_push_image_to_ecr:
          context: org-global
          aws-access-key-id: $STAGING_AWS_ACCESS_KEY_ID
          aws-secret-access-key: $STAGING_AWS_SECRET_ACCESS_KEY
          account-url: $STAGING_ECR_URL
          extra-docker-args: "--build-arg NPM_TOKEN=$NPM_TOKEN"
      # - datacamp-deploy/deploy:
      #     context: org-global
      #     requires:
      #       - datacamp-ecr/build_and_push_image_to_ecr
      #     new-deploy-opt-in: true
      #     deploy-url: $STAGING_LAMBDA_DEPLOY_URL
      #     deploy-password: $STAGING_LAMBDA_DEPLOY_PASSWORD
      #     extra-env: "DESIRED_COUNT=1 CLUSTER=datacamp-services SERVICE=ast-viewer"
      #     filters:
      #       branches:
      #         only: master
      - datacamp-ecr/pull_push_to_account:
          context: org-global
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      # - datacamp-deploy/deploy:
      #     context: org-global
      #     requires:
      #       - datacamp-ecr/pull_push_to_account
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
      #     new-deploy-opt-in: true
      #     deploy-url: $PROD_LAMBDA_DEPLOY_URL
      #     deploy-password: $PROD_LAMBDA_DEPLOY_PASSWORD
      #     extra-env: "DESIRED_COUNT=2 CLUSTER=datacamp-services SERVICE=ast-viewer"
      - datacamp-deploy/backstage-deploy:
          context: org-global
          requires:
            - datacamp-ecr/build_and_push_image_to_ecr
          extra-env: "SERVICE=ast-viewer-$CIRCLE_BRANCH CLUSTER=backstage DESIRED_COUNT=1"
          filters:
            branches:
              only: /backstage-.*/
